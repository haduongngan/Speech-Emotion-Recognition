// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/call/all": {
            "get": {
                "description": "input none =\u003e []Call",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "call-manager-apis"
                ],
                "summary": "Get all calls",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/call/create": {
            "post": {
                "description": "input Call =\u003e Call",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "call-manager-apis"
                ],
                "summary": "Create a call",
                "parameters": [
                    {
                        "description": "Call",
                        "name": "call",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Call"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/call/delete/{id}": {
            "delete": {
                "description": "input id =\u003e delete Call",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "call-manager-apis"
                ],
                "summary": "Delete a call",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/call/multi/create": {
            "post": {
                "description": "input []Call =\u003e add []Call",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "call-manager-apis"
                ],
                "summary": "Create multiple calls",
                "parameters": [
                    {
                        "description": "Calls info",
                        "name": "calls",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Call"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/call/update": {
            "put": {
                "description": "input Call =\u003e update Call",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "call-manager-apis"
                ],
                "summary": "Update a call",
                "parameters": [
                    {
                        "description": "Call",
                        "name": "call",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Call"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/call/{id}": {
            "get": {
                "description": "input id =\u003e Call",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "call-manager-apis"
                ],
                "summary": "Get a call by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/customer/all": {
            "get": {
                "description": "Get all customers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer-manager-apis"
                ],
                "summary": "Get all customers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/customer/calls": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all calls of an user with id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer-manager-apis"
                ],
                "summary": "Get all calls of an user with id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/customer/calls/filter": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "model.CallTimeFilterPayload =\u003e []Call",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer-manager-apis"
                ],
                "summary": "Get all calls in timeframe of an user with id",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CallTimeFilterPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/customer/create": {
            "post": {
                "description": "Get all customers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer-manager-apis"
                ],
                "summary": "Get all customers",
                "parameters": [
                    {
                        "description": "customer",
                        "name": "customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Customer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/customer/delete/{id}": {
            "delete": {
                "description": "Delete one customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer-manager-apis"
                ],
                "summary": "Delete one customer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/customer/update": {
            "put": {
                "description": "Update one customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer-manager-apis"
                ],
                "summary": "Update one customer",
                "parameters": [
                    {
                        "description": "customer",
                        "name": "customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Customer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/customer/{id}": {
            "get": {
                "description": "Get one customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer-manager-apis"
                ],
                "summary": "Get one customer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/employee/all": {
            "get": {
                "description": "Get all employees",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee-manager-apis"
                ],
                "summary": "Get all employees",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/employee/calls": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all calls of an user with id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee-manager-apis"
                ],
                "summary": "Get all calls of an user with id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/employee/create": {
            "post": {
                "description": "Get all employees",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee-manager-apis"
                ],
                "summary": "Get all employees",
                "parameters": [
                    {
                        "description": "employee",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Employee"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/employee/delete/{id}": {
            "delete": {
                "description": "Delete one employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee-manager-apis"
                ],
                "summary": "Delete one employee",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/employee/filter/calls": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "model.CallTimeFilterPayload =\u003e []Call",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee-manager-apis"
                ],
                "summary": "Get all calls in timeframe of an user with id",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CallTimeFilterPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/employee/update": {
            "put": {
                "description": "Update one employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee-manager-apis"
                ],
                "summary": "Update one employee",
                "parameters": [
                    {
                        "description": "employee",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Employee"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/employee/{id}": {
            "get": {
                "description": "Get one employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee-manager-apis"
                ],
                "summary": "Get one employee",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/file/storage/multi/{id}": {
            "post": {
                "description": "Import file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file-manager-apis"
                ],
                "summary": "Import file",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "file data",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "enum": [
                            "sound"
                        ],
                        "type": "string",
                        "description": "type",
                        "name": "type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/file/storage/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file-manager-apis"
                ],
                "summary": "Delete file",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "sound"
                        ],
                        "type": "string",
                        "description": "type",
                        "name": "type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/segment/all": {
            "get": {
                "description": "input none =\u003e []Segment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "segment-manager-apis"
                ],
                "summary": "Get all segments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/segment/call/{callId}": {
            "get": {
                "description": "input callId =\u003e []Segment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "segment-manager-apis"
                ],
                "summary": "Get segment with CallId",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Call Id",
                        "name": "callId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/segment/create": {
            "post": {
                "description": "input segmentInfo =\u003e Segment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "segment-manager-apis"
                ],
                "summary": "Create segment",
                "parameters": [
                    {
                        "description": "Segment info",
                        "name": "segmentInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Segment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/segment/create/multi": {
            "post": {
                "description": "input segmentInfo =\u003e []Segment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "segment-manager-apis"
                ],
                "summary": "Create multiple segments",
                "parameters": [
                    {
                        "description": "Segment info",
                        "name": "segmentInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Segment"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/segment/delete/{id}": {
            "delete": {
                "description": "input id =\u003e deleted segment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "segment-manager-apis"
                ],
                "summary": "deletes one segment from db with id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Segment Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/segment/emo/{id}": {
            "get": {
                "description": "input id =\u003e emotion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "segment-manager-apis"
                ],
                "summary": "Get segment emotion with Id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Segment Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/segment/{id}": {
            "get": {
                "description": "input id =\u003e Segment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "segment-manager-apis"
                ],
                "summary": "Get segment with Id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Segment Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/user/all": {
            "get": {
                "description": "returns all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-manager-apis"
                ],
                "summary": "returns all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/user/create": {
            "post": {
<<<<<<< HEAD
=======
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
>>>>>>> c49ca4fb5c7f89869d6acc105410659212e1fa24
                "description": "creates new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-manager-apis"
                ],
                "summary": "creates new user",
                "parameters": [
                    {
                        "description": "User information",
                        "name": "UserInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CreateResponse"
                        }
                    }
                }
            }
        },
        "/user/delete/{uid}": {
            "delete": {
<<<<<<< HEAD
=======
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
>>>>>>> c49ca4fb5c7f89869d6acc105410659212e1fa24
                "description": "delete user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-manager-apis"
                ],
                "summary": "delete user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "log user in",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-manager-apis"
                ],
                "summary": "log user in",
                "parameters": [
                    {
                        "description": "username \u0026 password",
                        "name": "LoginPayload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/user/login/jwt": {
            "post": {
                "description": "login user, return new token string jwt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-manager-apis"
                ],
                "summary": "login user",
                "parameters": [
                    {
                        "description": "Insert your access token",
                        "name": "TokenPayload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.TokenPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.LoginResponse"
                        }
                    }
                }
            }
        },
        "/user/wname": {
            "get": {
<<<<<<< HEAD
=======
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
>>>>>>> c49ca4fb5c7f89869d6acc105410659212e1fa24
                "description": "input username =\u003e user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-manager-apis"
                ],
                "summary": "get user with usn",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.TokenPayload": {
            "type": "object",
            "properties": {
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "model.Call": {
            "type": "object",
            "properties": {
                "customerEmotion": {
                    "type": "string"
                },
                "customerId": {
                    "type": "integer"
                },
                "duration": {
                    "type": "string"
                },
                "employeeEmotion": {
                    "type": "string"
                },
                "employeeId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "overallEmotion": {
                    "type": "string"
                },
                "segments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Segment"
                    }
                },
                "startTime": {
                    "type": "string"
                }
            }
        },
        "model.CallTimeFilterPayload": {
            "type": "object",
            "properties": {
                "endTime": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "model.CreateResponse": {
            "type": "object",
            "properties": {
<<<<<<< HEAD
                "id": {
                    "type": "integer"
                },
                "locationName": {
                    "type": "string"
                },
=======
                "companyName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
>>>>>>> c49ca4fb5c7f89869d6acc105410659212e1fa24
                "message": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.Customer": {
            "type": "object",
            "properties": {
                "calls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Call"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "phone": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/model.User"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "model.Employee": {
            "type": "object",
            "properties": {
                "calls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Call"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/model.User"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "model.LoginResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
<<<<<<< HEAD
                "locationName": {
=======
                "companyName": {
>>>>>>> c49ca4fb5c7f89869d6acc105410659212e1fa24
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
<<<<<<< HEAD
                "permission": {
                    "type": "boolean"
                },
                "progress": {
                    "type": "integer"
                },
=======
>>>>>>> c49ca4fb5c7f89869d6acc105410659212e1fa24
                "refreshToken": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "token": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.Response": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
<<<<<<< HEAD
=======
        "model.Segment": {
            "type": "object",
            "properties": {
                "callId": {
                    "type": "integer"
                },
                "emotion": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "segNum": {
                    "type": "integer"
                }
            }
        },
>>>>>>> c49ca4fb5c7f89869d6acc105410659212e1fa24
        "model.User": {
            "type": "object",
            "properties": {
                "companyName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.UserPayload": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:19001",
	BasePath:    "/api/v1",
	Schemes:     []string{},
	Title:       "Speech Emotion Recognition APIs",
	Description: "SPSER - Speech Emotion Recognition Service.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
